#!/usr/bin/env bash

#
# packages/dconf/package
#

DESCRIPTION='Manages dconf settings for applications that use it, e.g. Tilix.'
INSTALL_MSG='Applying dconf settings...'
UNINSTALL_MSG='Restoring dconf settings...'
PLATFORMS='!MACOS'

SUFFIX='.dconf'

install() {
  echo -n 'checking for existence of dconf... '
  local dconf_bin="$(command -v dconf)"
  if [[ -n ${dconf_bin} ]]; then
    success
  else
    failure
    echo 'skipping installation...'
    return 1
  fi

  local files=$(ls -d "${PACKAGE_FILES}"/*${SUFFIX})
  for file in ${files}; do
    # Get the basename of the file, trim the extension suffix.
    local name="${file##*/}"
    name="${name%${SUFFIX}}"
    # Replace all dots with forward slashes, and add leading/trailing slashes.
    local schema="/${name//./\/}/"
    echo -n "loading settings for ${schema}... "

    dconf dump "${schema}" > "${PACKAGE_BACKUPS}/${file##*/}" || { error && continue; }
    dconf load "${schema}" < "${file}" || { error && continue; }
    ok
  done
}

uninstall() {
  return
}

reload() {
  local files=$(ls -d "${PACKAGE_FILES}"/*${SUFFIX})
  for file in ${files}; do
    # Get the basename of the file, trim the extension suffix.
    local name="${file##*/}"
    name="${name%${SUFFIX}}"
    # Replace all dots with forward slashes, and add leading/trailing slashes.
    local schema="/${name//./\/}/"
    echo -n "loading settings for ${schema}... "

    dconf load "${schema}" < "${file}" || { error && continue; }
    ok
  done
}
