#!/bin/bash

#
# packages/programs/package
#

DESCRIPTION='Configures pacman, installs AUR client, installs programs.'
INSTALL_MSG='Installing applications...'
UNINSTALL_MSG='Restoring applications...'

install() {
  echo -n 'checking if platform is Arch Linux... '
  if [[ ${PLATFORM_NAME} == 'ARCH' ]]; then
    success
  else
    failure
    echo 'skipping installation...'
    return 1
  fi

  backup_and_copy "${PACKAGE_FILES}/pacman.conf" /etc/pacman.conf || return 1
  platform_update

  echo -n 'building and installing trizen for AUR support... '
  execute_silent pushd ${PACKAGE_FILES}/trizen/
  execute makepkg --syncdeps --clean --force && \
    execute_silent sudo pacman -U --noconfirm trizen-*.pkg.tar.xz && \
    platform_detect
  execute_silent popd

  for program in $(cat "${PACKAGE_FILES}"/*.list); do
    if ! execute_silent pacman -Qq ${program}; then
      echo "${program}" >> "${PACKAGE_BACKUPS}/programs_added"
    fi

    platform_install "${program}"
  done
}

uninstall() {
  restore pacman.conf /etc/pacman.conf || return 1

  local programs_added="$(find ~/.dotfiles_old/ -name programs_added)"

  if [[ -n ${programs_added} ]]; then
    local programs="$(cat ${programs_added} | sort -u)"

    for program in ${programs}; do
      platform_remove "${program}"
    done
  fi

  platform_remove trizen
  platform_detect
}

post_update() {
  platform_update
  platform_upgrade
}
